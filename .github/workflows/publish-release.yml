name: üöß Build, lint & Release if version changed

on:
  push:
    branches: [main]

jobs:
  Build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: üì• Checkout Commit
        uses: actions/checkout@v3

      - name: üîç Parse package.json
        id: packageInfo
        run: |
          echo "PACKAGE_NAME=$(jq -r .name package.json)" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: üõ†Ô∏è Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üßπ Run ESLint
        run: npm run lint

      - name: üèóÔ∏è Build project
        run: npm run build:tsc

      - name: üîñ Check if version tag already exists
        id: check_tag
        run: |
          git fetch --tags --force

          if git rev-parse "v$PACKAGE_VERSION" >/dev/null 2>&1; then
            echo "Tag v$PACKAGE_VERSION already exists. Skipping release."
            echo "should_release=false" >> $GITHUB_OUTPUT
          else
            echo "No tag for version v$PACKAGE_VERSION"
            echo "should_release=true" >> $GITHUB_OUTPUT
          fi

      - name: üè∑Ô∏è Create GitHub Release
        if: steps.check_tag.outputs.should_release == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          release_name: v${{ env.PACKAGE_VERSION }}
          draft: true
          prerelease: false
